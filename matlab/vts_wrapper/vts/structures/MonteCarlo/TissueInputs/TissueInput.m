%TISSUEINPUT Defines input data for Tissue implementation
%   
classdef TissueInput
    methods (Static)
        function input = Default()
            input.TissueType = 'MultiLayer';
            input.Regions = struct(...
                'ZRange',{...
                    [-Inf, 0], ...
                    [0, 100], ...
                    [100, +Inf]}, ...
                'RegionOP',{...
                    [0.0, 1e-10, 1.0, 1.0], ...
                    [0.0, 1.0, 0.8, 1.4], ...
                    [0.0, 1e-10, 1.0, 1.0]  }, ...
                'PhaseFunctionKey',{...
                    'HenyeyGreenstein1','HenyeyGreenstein2','HenyeyGreenstein3'});
            input.RegionPhaseFunctionInputs = ...
                containers.Map({'HenyeyGreensteinKey1','HenyeyGreensteinKey2','HenyeyGreensteinKey3'},...
                               {HenyeyGreensteinPhaseFunctionInput,...
                                HenyeyGreensteinPhaseFunctionInput,...
                                HenyeyGreensteinPhaseFunctionInput});
        end

        function input = MultiLayer(regions, regionPhaseFunctionInputs)
            input.TissueType = 'MultiLayer';
            input.Regions = regions;
            input.RegionPhaseFunctionInputs = regionPhaseFunctionInputs;
        end 

        function input = FromInputNET(inputNET)
            input.TissueType = char(inputNET.TissueType);
            switch input.TissueType
                case 'MultiLayer'
                regionNET = inputNET.Regions;
                for i=1:regionNET.Length
                    regions(i).ZRange = [...
                        regionNET(i).ZRange.Start, ...
                        regionNET(i).ZRange.Stop ...
                        ];
                    regions(i).RegionOP = [ ...
                        regionNET(i).RegionOP.Mua, ...
                        regionNET(i).RegionOP.Musp, ...
                        regionNET(i).RegionOP.G, ...
                        regionNET(i).RegionOP.N ...
                        ];
                    regions(i).PhaseFunctionKey = [ ...
                        regionNET(i).PhaseFunctionKey, ... 
                        ];
                end
                input.LayerRegions = regions;
                otherwise
                    disp('Unknown TissueInput type');
            end
        end
      
      function inputNET = ToInputNET(input)
          switch input.TissueType           
              case 'MultiLayer'
                  inputNET = Vts.MonteCarlo.Tissues.MultiLayerTissueInput( ...
                      Vts.MonteCarlo.Tissues.MultiLayerTissueInput.Regions(...
                        input.TissueInput.Regions(1), input.TissueInput.Regions(2), input.TissueInput.Regions(3))...
                      );
              otherwise
                    disp('Unknown TissueInput type');
          end
      end
    end
    
end

