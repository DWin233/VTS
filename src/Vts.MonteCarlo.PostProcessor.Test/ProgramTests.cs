using System.Collections.Generic;
using System.IO;
using NUnit.Framework;

namespace Vts.MonteCarlo.PostProcessor.Test
{
    [TestFixture]
    public class ProgramTests
    {
        /// <summary>
        /// clear all previously generated folders and files.
        /// </summary>
        
        // Note: needs to be kept current with PostProcessorInputProvider.  If an infile is added there, it should be added here.
        List<string> listOfInfiles = new List<string>()
        {
            "infile_PostProcessor_ROfRho.txt",
            "infile_PostProcessor_pMC_ROfRhoROfRhoAndTime.txt"
        };
        [TestFixtureSetUp]
        public void clear_folders_and_files()
        {
            // delete any previously generated infiles to test that "geninfiles" option creates them
            foreach (var infile in listOfInfiles)
            {
                if (File.Exists(infile))
                {
                    File.Delete(infile);
                }
            }
            if (Directory.Exists("PostProcessor_ROfRho"))
            {
                Directory.Delete("PostProcessor_ROfRho", true);
            }
            if (Directory.Exists("PostProcessor_pMC_ROfRhoROfRhoAndTime"))
            {
                Directory.Delete("PostProcessor_pMC_ROfRhoROfRhoAndTime", true); // delete recursively
            }
            // generate sample infiles because unit tests below rely on infiles being generated
            string[] arguments = new string[] { "geninfiles" };
            Program.Main(arguments);
        }
        /// <summary>
        /// test to verify "geninfiles" option works successfully. 
        /// </summary>
        [Test]
        public void validate_geninfiles_option_generates_all_infiles()
        {
            foreach (var infile in listOfInfiles)
            {
                Assert.IsTrue(File.Exists(infile));
            }
        }

        ///// <summary>
        ///// can't run this test until determine method to generate pMC output folder to read
        ///// test to verify correct folder name created for output
        ///// </summary>
        //[Test]
        //public void validate_output_folder_name_when_using_geninfile_infile()
        //{
        //    string[] arguments = new string[] { "infile=infile_PostProcessor_ROfRho.txt" };
        //    Program.Main(arguments);
        //    Assert.IsTrue(Directory.Exists("PostProcessor_ROfRho"));
        //    // verify infile gets written to output folder
        //    Assert.IsTrue(File.Exists("PostProcessor_ROfRho/PostProcessor_ROfRho.txt"));
        //}
        ///// <summary>
        ///// test to verify post-processor runs successfully.  NEED to determine way to
        ///// have databases generated by MCCL available to this test.
        ///// </summary>
        //[Test]
        //public void validate_post_processor_execution()
        //{
        //    var diffuseReflectanceDB = (PhotonDatabase)PhotonDatabase.FromFileInResources(
        //        "Vts.MonteCarlo.PostProcessor.Test/Resources/DiffuseReflectanceDatabase", "Vts.MonteCarlo.PostProcessor.Test");
        //    string[] arguments = new string[] { "infile=infile_PostProcessor_ROfRho.txt" };
        //    Program.Main(arguments);
        //    Assert.IsTrue(File.Exists("infile_PostProcessor_ROfRho.txt"));
        //}
    }
}
